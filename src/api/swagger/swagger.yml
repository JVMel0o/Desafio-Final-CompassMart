openapi: 3.0.3
info: 
  title: Compass Mart
  description: Compasso is undertaking in a market branch and aggregated with CompassMart, a department store, focused in food commerce, are requesting their APi's Back-end.
  
  contact:
    name: Jo√£o Vitor Olandini Ferreira de Melo
    email: joao.melo.pb@compasso.com.br
    url: https://github.com/JVMel0o
  version: 1.0.0
tags:
  - name: Products
    description: Operations about products
  - name: Users
    description: Operations about users
servers:
 - url: https://localhost:3000/api/v1
paths:
  /product:
    get:
      tags: 
        - Products
      summary: Find all products,
      description: Find all products and return a list,
      parameters:
      - name: brand
        in: query
        required: false
        schema:
          type: string
      - name: department
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: number
      - name: limit
        in: query
        required: false
        schema:
          type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsResponse'
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
    post:
      tags: 
        - Products
      summary: Create a new product
      description: Create a new products at the stock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /product/low_stock:
    get:
      tags: 
        - Products
      summary: Find all products with low stock
      description: Find all products with stock lower than 100
      parameters:
      - name: brand
        in: query
        required: false
        schema:
          type: string
      - name: department
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: number
      - name: limit
        in: query
        required: false
        schema:
          type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsResponse'
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /product/{id}:
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      tags: 
        - Products
      summary: Find a product
      description: Find a product with its ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsResponse'
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
    put:
      tags: 
        - Products
      summary: Update a product
      description: Update all values from a product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
    patch:
      tags: 
      - Products
      summary: Update a product
      description: Update specifics value from a product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
    delete:
      tags: 
      - Products
      summary: Find a product
      description: Find a product with its ID
      responses:
        '204':
          description: Product deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /product/csv:
    post:
      tags: 
      - Products
      summary: Create new products with CSV
      description: Create new products with a CSV file
      requestBody:
        content: 
          csv:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /user:
    post:
      tags: 
      - Users
      summary: Create a new user
      description: Create a new user at the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags: 
      - Users
      summary: Find all users
      description: Find all users and return a list
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: number
      - name: limit
        in: query
        required : false
        schema:
          type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersResponse'
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /user/{email}:
    parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
    get:
      tags: 
      - Users
      summary: Find a user
      description: Find a user with his email
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersResponse'
        '404':
          description: Page Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security: 
      - auth: []
  /authenticate:
    post:
      tags: 
      - Users
      summary: Login user
      description: Login user in the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersRequest'
        required: true
      responses:
        '201':
          description: Success User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '401':
          description: Invalid password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ProductsRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        department:
          type: string
        brand:
          type: string
        price:
          type: number
        qtd_stock:
          type: number
        bar_code:
          type: string
    ProductsResponse:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        department:
          type: string
        brand:
          type: string
        price:
          type: number
        qtd_stock:
          type: number
        bar_code:
          type: string
        stock_control_enable:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
        _v:
          type: number
    Error:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          details:
            type: object
            properties:
              message:
                type: array
                items:
                  type: string
    UsersRequest:
        type: object
        properties:
          email:
            type: string
          password:
            type: string
    UsersResponse:
        type: object
        properties:
          email:
            type: string
          passwordHash:
            type: string
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT